{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextArea = void 0;\nvar React = require(\"react\");\nvar ClassNames_1 = require(\"../util/ClassNames\");\nvar TextAreaCaretPosition_1 = require(\"../util/TextAreaCaretPosition\");\nvar InsertTextAtPosition_1 = require(\"../util/InsertTextAtPosition\");\nvar Math_1 = require(\"../util/Math\");\nvar SuggestionsDropdown_1 = require(\"./SuggestionsDropdown\");\nvar TextArea = /** @class */function (_super) {\n  __extends(TextArea, _super);\n  function TextArea(props) {\n    var _this = _super.call(this, props) || this;\n    _this.currentLoadSuggestionsPromise = Promise.resolve(undefined);\n    /**\n     * suggestionsPromiseIndex exists as a means to cancel what happens when the suggestions promise finishes loading.\n     *\n     * When the user is searching for suggestions, there is a promise that, when resolved, causes a re-render.\n     * However, in case there is another promise to be resolved after the current one, it does not make sense to re-render\n     * only to re-render again after the next one is complete.\n     *\n     * When there is a promise loading and the user cancels the suggestion, you don't want the status to go back to \"active\"\n     * when the promise resolves.\n     *\n     * suggestionsPromiseIndex increments every time the mentions query\n     */\n    _this.suggestionsPromiseIndex = 0;\n    _this.getTextArea = function () {\n      return _this.props.refObject.current;\n    };\n    _this.handleOnChange = function (event) {\n      var onChange = _this.props.onChange;\n      onChange(event.target.value);\n    };\n    _this.handleBlur = function () {\n      var mention = _this.state.mention;\n      if (mention) {\n        _this.setState({\n          mention: {\n            status: \"inactive\",\n            suggestions: []\n          }\n        });\n      }\n    };\n    _this.startLoadingSuggestions = function (text) {\n      var promiseIndex = ++_this.suggestionsPromiseIndex;\n      var loadSuggestions = _this.props.loadSuggestions;\n      _this.currentLoadSuggestionsPromise = _this.currentLoadSuggestionsPromise.then(function () {\n        return loadSuggestions(text, _this.state.mention.triggeredBy);\n      }).then(function (suggestions) {\n        if (_this.state.mention.status === \"inactive\") {\n          // This means this promise resolved too late when the status has already been set to inactice\n          return;\n        } else if (_this.suggestionsPromiseIndex === promiseIndex) {\n          if (!suggestions || !suggestions.length) {\n            _this.setState({\n              mention: {\n                status: \"inactive\",\n                suggestions: []\n              }\n            });\n          } else {\n            _this.setState({\n              mention: __assign(__assign({}, _this.state.mention), {\n                status: \"active\",\n                suggestions: suggestions,\n                focusIndex: 0\n              })\n            });\n          }\n          _this.suggestionsPromiseIndex = 0;\n        }\n        return Promise.resolve();\n      });\n    };\n    _this.loadEmptySuggestion = function (target, key) {\n      var caret = TextAreaCaretPosition_1.getCaretCoordinates(target, key);\n      _this.startLoadingSuggestions(\"\");\n      _this.setState({\n        mention: {\n          status: \"loading\",\n          startPosition: target.selectionStart + 1,\n          caret: caret,\n          suggestions: [],\n          triggeredBy: key\n        }\n      });\n    };\n    _this.handleSuggestionSelected = function (index) {\n      var mention = _this.state.mention;\n      _this.getTextArea().selectionStart = mention.startPosition - 1;\n      var textForInsert = _this.props.value.substr(_this.getTextArea().selectionStart, _this.getTextArea().selectionEnd - _this.getTextArea().selectionStart);\n      InsertTextAtPosition_1.insertText(_this.getTextArea(), mention.suggestions[index].value + \" \");\n      _this.setState({\n        mention: {\n          status: \"inactive\",\n          suggestions: []\n        }\n      });\n    };\n    _this.handleKeyDown = function (event) {\n      if (_this.props.onPossibleKeyCommand) {\n        var handled = _this.props.onPossibleKeyCommand(event);\n        if (handled) {\n          event.preventDefault();\n          // If the keydown resulted in a command being executed, we will just close the suggestions if they are open.\n          // Resetting suggestionsPromiseIndex will cause any promise that is yet to be resolved to have no effect\n          // when they finish loading.\n          // TODO: The code below is duplicate, we need to clean this up\n          _this.suggestionsPromiseIndex = 0;\n          _this.setState({\n            mention: {\n              status: \"inactive\",\n              suggestions: []\n            }\n          });\n          return;\n        }\n      }\n      if (!_this.suggestionsEnabled()) {\n        return;\n      }\n      var key = event.key,\n        shiftKey = event.shiftKey,\n        currentTarget = event.currentTarget;\n      var selectionStart = currentTarget.selectionStart;\n      var mention = _this.state.mention;\n      switch (mention.status) {\n        case \"loading\":\n        case \"active\":\n          if (key === \"Escape\" || key === \"Backspace\" && selectionStart <= _this.state.mention.startPosition) {\n            // resetting suggestionsPromiseIndex will cause any promise that is yet to be resolved to have no effect\n            // when they finish loading.\n            _this.suggestionsPromiseIndex = 0;\n            _this.setState({\n              mention: {\n                status: \"inactive\",\n                suggestions: []\n              }\n            });\n          } else if (mention.status === \"active\" && (key === \"ArrowUp\" || key === \"ArrowDown\") && !shiftKey) {\n            event.preventDefault();\n            var focusDelta = key === \"ArrowUp\" ? -1 : 1;\n            _this.setState({\n              mention: __assign(__assign({}, mention), {\n                focusIndex: Math_1.mod(mention.focusIndex + focusDelta, mention.suggestions.length)\n              })\n            });\n          } else if (key === \"Enter\" && mention.status === \"active\" && mention.suggestions.length) {\n            event.preventDefault();\n            _this.handleSuggestionSelected(mention.focusIndex);\n          }\n          break;\n        default:\n        // Ignore\n      }\n    };\n\n    _this.handleKeyUp = function (event) {\n      var key = event.key;\n      var mention = _this.state.mention;\n      var _a = _this.props,\n        suggestionTriggerCharacters = _a.suggestionTriggerCharacters,\n        value = _a.value;\n      switch (mention.status) {\n        case \"loading\":\n        case \"active\":\n          if (key === \"Backspace\") {\n            var searchText = value.substr(mention.startPosition, _this.getTextArea().selectionStart - mention.startPosition);\n            _this.startLoadingSuggestions(searchText);\n            if (mention.status !== \"loading\") {\n              _this.setState({\n                mention: __assign(__assign({}, _this.state.mention), {\n                  status: \"loading\"\n                })\n              });\n            }\n          }\n          break;\n        case \"inactive\":\n          if (key === \"Backspace\") {\n            var prevChar = value.charAt(_this.getTextArea().selectionStart - 1);\n            var isAtMention = suggestionTriggerCharacters.includes(value.charAt(_this.getTextArea().selectionStart - 1));\n            if (isAtMention) {\n              _this.loadEmptySuggestion(event.currentTarget, prevChar);\n            }\n          }\n          break;\n        default:\n        // Ignore\n      }\n    };\n\n    _this.handleKeyPress = function (event) {\n      var _a = _this.props,\n        suggestionTriggerCharacters = _a.suggestionTriggerCharacters,\n        value = _a.value;\n      var mention = _this.state.mention;\n      var key = event.key;\n      switch (mention.status) {\n        case \"loading\":\n        case \"active\":\n          if (key === \" \") {\n            _this.setState({\n              mention: __assign(__assign({}, _this.state.mention), {\n                status: \"inactive\"\n              })\n            });\n            return;\n          }\n          var searchText = value.substr(mention.startPosition, _this.getTextArea().selectionStart - mention.startPosition) + key;\n          // In this case, the mentions box was open but the user typed something else\n          _this.startLoadingSuggestions(searchText);\n          if (mention.status !== \"loading\") {\n            _this.setState({\n              mention: __assign(__assign({}, _this.state.mention), {\n                status: \"loading\"\n              })\n            });\n          }\n          break;\n        case \"inactive\":\n          if (suggestionTriggerCharacters.indexOf(event.key) === -1 || !/\\s|\\(|\\[|^.{0}$/.test(value.charAt(_this.getTextArea().selectionStart - 1))) {\n            return;\n          }\n          _this.loadEmptySuggestion(event.currentTarget, event.key);\n          break;\n      }\n    };\n    _this.state = {\n      mention: {\n        status: \"inactive\",\n        suggestions: []\n      }\n    };\n    return _this;\n  }\n  TextArea.prototype.suggestionsEnabled = function () {\n    return this.props.suggestionTriggerCharacters && this.props.suggestionTriggerCharacters.length && this.props.loadSuggestions;\n  };\n  TextArea.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      classes = _a.classes,\n      readOnly = _a.readOnly,\n      textAreaProps = _a.textAreaProps,\n      height = _a.height,\n      heightUnits = _a.heightUnits,\n      value = _a.value,\n      suggestionTriggerCharacters = _a.suggestionTriggerCharacters,\n      loadSuggestions = _a.loadSuggestions,\n      suggestionsDropdownClasses = _a.suggestionsDropdownClasses,\n      textAreaComponent = _a.textAreaComponent,\n      onPaste = _a.onPaste,\n      onDrop = _a.onDrop;\n    var suggestionsEnabled = suggestionTriggerCharacters && suggestionTriggerCharacters.length && loadSuggestions;\n    var mention = this.state.mention;\n    var TextAreaComponent = textAreaComponent || \"textarea\";\n    var heightVal = height && heightUnits ? height + heightUnits : height;\n    return React.createElement(\"div\", {\n      className: \"mde-textarea-wrapper\"\n    }, React.createElement(TextAreaComponent, __assign({\n      className: ClassNames_1.classNames(\"mde-text\", classes),\n      style: {\n        height: heightVal\n      },\n      ref: this.props.refObject,\n      readOnly: readOnly,\n      value: value,\n      \"data-testid\": \"text-area\"\n    }, textAreaProps, {\n      onChange: function (event) {\n        var _a;\n        (_a = textAreaProps === null || textAreaProps === void 0 ? void 0 : textAreaProps.onChange) === null || _a === void 0 ? void 0 : _a.call(textAreaProps, event);\n        _this.handleOnChange(event);\n      },\n      onBlur: function (event) {\n        var _a;\n        (_a = textAreaProps === null || textAreaProps === void 0 ? void 0 : textAreaProps.onBlur) === null || _a === void 0 ? void 0 : _a.call(textAreaProps, event);\n        if (suggestionsEnabled) {\n          _this.handleBlur();\n        }\n      },\n      onKeyDown: function (event) {\n        var _a;\n        (_a = textAreaProps === null || textAreaProps === void 0 ? void 0 : textAreaProps.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(textAreaProps, event);\n        _this.handleKeyDown(event);\n      },\n      onKeyUp: function (event) {\n        var _a;\n        (_a = textAreaProps === null || textAreaProps === void 0 ? void 0 : textAreaProps.onKeyUp) === null || _a === void 0 ? void 0 : _a.call(textAreaProps, event);\n        if (suggestionsEnabled) {\n          _this.handleKeyUp(event);\n        }\n      },\n      onKeyPress: function (event) {\n        var _a;\n        (_a = textAreaProps === null || textAreaProps === void 0 ? void 0 : textAreaProps.onKeyPress) === null || _a === void 0 ? void 0 : _a.call(textAreaProps, event);\n        if (suggestionsEnabled) {\n          _this.handleKeyPress(event);\n        }\n      },\n      onPaste: function (event) {\n        var _a;\n        (_a = textAreaProps === null || textAreaProps === void 0 ? void 0 : textAreaProps.onPaste) === null || _a === void 0 ? void 0 : _a.call(textAreaProps, event);\n        onPaste(event);\n      },\n      onDragOver: function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n      },\n      onDrop: function (event) {\n        var _a;\n        (_a = textAreaProps === null || textAreaProps === void 0 ? void 0 : textAreaProps.onDrop) === null || _a === void 0 ? void 0 : _a.call(textAreaProps, event);\n        onDrop(event);\n        event.preventDefault();\n      }\n    })), mention.status === \"active\" && mention.suggestions.length && React.createElement(SuggestionsDropdown_1.SuggestionsDropdown, {\n      classes: suggestionsDropdownClasses,\n      caret: mention.caret,\n      suggestions: mention.suggestions,\n      onSuggestionSelected: this.handleSuggestionSelected,\n      suggestionsAutoplace: this.props.suggestionsAutoplace,\n      focusIndex: mention.focusIndex,\n      textAreaRef: this.props.refObject\n    }));\n  };\n  return TextArea;\n}(React.Component);\nexports.TextArea = TextArea;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","defineProperty","exports","value","TextArea","React","require","ClassNames_1","TextAreaCaretPosition_1","InsertTextAtPosition_1","Math_1","SuggestionsDropdown_1","_super","props","_this","currentLoadSuggestionsPromise","Promise","resolve","undefined","suggestionsPromiseIndex","getTextArea","refObject","current","handleOnChange","event","onChange","target","handleBlur","mention","state","setState","status","suggestions","startLoadingSuggestions","text","promiseIndex","loadSuggestions","then","triggeredBy","focusIndex","loadEmptySuggestion","key","caret","getCaretCoordinates","startPosition","selectionStart","handleSuggestionSelected","index","textForInsert","substr","selectionEnd","insertText","handleKeyDown","onPossibleKeyCommand","handled","preventDefault","suggestionsEnabled","shiftKey","currentTarget","focusDelta","mod","handleKeyUp","_a","suggestionTriggerCharacters","searchText","prevChar","charAt","isAtMention","includes","handleKeyPress","indexOf","test","render","classes","readOnly","textAreaProps","height","heightUnits","suggestionsDropdownClasses","textAreaComponent","onPaste","onDrop","TextAreaComponent","heightVal","createElement","className","classNames","style","ref","onBlur","onKeyDown","onKeyUp","onKeyPress","onDragOver","stopPropagation","SuggestionsDropdown","onSuggestionSelected","suggestionsAutoplace","textAreaRef","Component"],"sources":["C:/Users/Din/Desktop/web/React/notesapp/node_modules/react-mde/lib/js/components/TextArea.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextArea = void 0;\nvar React = require(\"react\");\nvar ClassNames_1 = require(\"../util/ClassNames\");\nvar TextAreaCaretPosition_1 = require(\"../util/TextAreaCaretPosition\");\nvar InsertTextAtPosition_1 = require(\"../util/InsertTextAtPosition\");\nvar Math_1 = require(\"../util/Math\");\nvar SuggestionsDropdown_1 = require(\"./SuggestionsDropdown\");\nvar TextArea = /** @class */ (function (_super) {\n    __extends(TextArea, _super);\n    function TextArea(props) {\n        var _this = _super.call(this, props) || this;\n        _this.currentLoadSuggestionsPromise = Promise.resolve(undefined);\n        /**\n         * suggestionsPromiseIndex exists as a means to cancel what happens when the suggestions promise finishes loading.\n         *\n         * When the user is searching for suggestions, there is a promise that, when resolved, causes a re-render.\n         * However, in case there is another promise to be resolved after the current one, it does not make sense to re-render\n         * only to re-render again after the next one is complete.\n         *\n         * When there is a promise loading and the user cancels the suggestion, you don't want the status to go back to \"active\"\n         * when the promise resolves.\n         *\n         * suggestionsPromiseIndex increments every time the mentions query\n         */\n        _this.suggestionsPromiseIndex = 0;\n        _this.getTextArea = function () {\n            return _this.props.refObject.current;\n        };\n        _this.handleOnChange = function (event) {\n            var onChange = _this.props.onChange;\n            onChange(event.target.value);\n        };\n        _this.handleBlur = function () {\n            var mention = _this.state.mention;\n            if (mention) {\n                _this.setState({ mention: { status: \"inactive\", suggestions: [] } });\n            }\n        };\n        _this.startLoadingSuggestions = function (text) {\n            var promiseIndex = ++_this.suggestionsPromiseIndex;\n            var loadSuggestions = _this.props.loadSuggestions;\n            _this.currentLoadSuggestionsPromise = _this.currentLoadSuggestionsPromise\n                .then(function () { return loadSuggestions(text, _this.state.mention.triggeredBy); })\n                .then(function (suggestions) {\n                if (_this.state.mention.status === \"inactive\") {\n                    // This means this promise resolved too late when the status has already been set to inactice\n                    return;\n                }\n                else if (_this.suggestionsPromiseIndex === promiseIndex) {\n                    if (!suggestions || !suggestions.length) {\n                        _this.setState({\n                            mention: {\n                                status: \"inactive\",\n                                suggestions: []\n                            }\n                        });\n                    }\n                    else {\n                        _this.setState({\n                            mention: __assign(__assign({}, _this.state.mention), { status: \"active\", suggestions: suggestions, focusIndex: 0 })\n                        });\n                    }\n                    _this.suggestionsPromiseIndex = 0;\n                }\n                return Promise.resolve();\n            });\n        };\n        _this.loadEmptySuggestion = function (target, key) {\n            var caret = TextAreaCaretPosition_1.getCaretCoordinates(target, key);\n            _this.startLoadingSuggestions(\"\");\n            _this.setState({\n                mention: {\n                    status: \"loading\",\n                    startPosition: target.selectionStart + 1,\n                    caret: caret,\n                    suggestions: [],\n                    triggeredBy: key\n                }\n            });\n        };\n        _this.handleSuggestionSelected = function (index) {\n            var mention = _this.state.mention;\n            _this.getTextArea().selectionStart = mention.startPosition - 1;\n            var textForInsert = _this.props.value.substr(_this.getTextArea().selectionStart, _this.getTextArea().selectionEnd - _this.getTextArea().selectionStart);\n            InsertTextAtPosition_1.insertText(_this.getTextArea(), mention.suggestions[index].value + \" \");\n            _this.setState({\n                mention: {\n                    status: \"inactive\",\n                    suggestions: []\n                }\n            });\n        };\n        _this.handleKeyDown = function (event) {\n            if (_this.props.onPossibleKeyCommand) {\n                var handled = _this.props.onPossibleKeyCommand(event);\n                if (handled) {\n                    event.preventDefault();\n                    // If the keydown resulted in a command being executed, we will just close the suggestions if they are open.\n                    // Resetting suggestionsPromiseIndex will cause any promise that is yet to be resolved to have no effect\n                    // when they finish loading.\n                    // TODO: The code below is duplicate, we need to clean this up\n                    _this.suggestionsPromiseIndex = 0;\n                    _this.setState({\n                        mention: {\n                            status: \"inactive\",\n                            suggestions: []\n                        }\n                    });\n                    return;\n                }\n            }\n            if (!_this.suggestionsEnabled()) {\n                return;\n            }\n            var key = event.key, shiftKey = event.shiftKey, currentTarget = event.currentTarget;\n            var selectionStart = currentTarget.selectionStart;\n            var mention = _this.state.mention;\n            switch (mention.status) {\n                case \"loading\":\n                case \"active\":\n                    if (key === \"Escape\" ||\n                        (key === \"Backspace\" &&\n                            selectionStart <= _this.state.mention.startPosition)) {\n                        // resetting suggestionsPromiseIndex will cause any promise that is yet to be resolved to have no effect\n                        // when they finish loading.\n                        _this.suggestionsPromiseIndex = 0;\n                        _this.setState({\n                            mention: {\n                                status: \"inactive\",\n                                suggestions: []\n                            }\n                        });\n                    }\n                    else if (mention.status === \"active\" &&\n                        (key === \"ArrowUp\" || key === \"ArrowDown\") &&\n                        !shiftKey) {\n                        event.preventDefault();\n                        var focusDelta = key === \"ArrowUp\" ? -1 : 1;\n                        _this.setState({\n                            mention: __assign(__assign({}, mention), { focusIndex: Math_1.mod(mention.focusIndex + focusDelta, mention.suggestions.length) })\n                        });\n                    }\n                    else if (key === \"Enter\" &&\n                        mention.status === \"active\" &&\n                        mention.suggestions.length) {\n                        event.preventDefault();\n                        _this.handleSuggestionSelected(mention.focusIndex);\n                    }\n                    break;\n                default:\n                // Ignore\n            }\n        };\n        _this.handleKeyUp = function (event) {\n            var key = event.key;\n            var mention = _this.state.mention;\n            var _a = _this.props, suggestionTriggerCharacters = _a.suggestionTriggerCharacters, value = _a.value;\n            switch (mention.status) {\n                case \"loading\":\n                case \"active\":\n                    if (key === \"Backspace\") {\n                        var searchText = value.substr(mention.startPosition, _this.getTextArea().selectionStart - mention.startPosition);\n                        _this.startLoadingSuggestions(searchText);\n                        if (mention.status !== \"loading\") {\n                            _this.setState({\n                                mention: __assign(__assign({}, _this.state.mention), { status: \"loading\" })\n                            });\n                        }\n                    }\n                    break;\n                case \"inactive\":\n                    if (key === \"Backspace\") {\n                        var prevChar = value.charAt(_this.getTextArea().selectionStart - 1);\n                        var isAtMention = suggestionTriggerCharacters.includes(value.charAt(_this.getTextArea().selectionStart - 1));\n                        if (isAtMention) {\n                            _this.loadEmptySuggestion(event.currentTarget, prevChar);\n                        }\n                    }\n                    break;\n                default:\n                // Ignore\n            }\n        };\n        _this.handleKeyPress = function (event) {\n            var _a = _this.props, suggestionTriggerCharacters = _a.suggestionTriggerCharacters, value = _a.value;\n            var mention = _this.state.mention;\n            var key = event.key;\n            switch (mention.status) {\n                case \"loading\":\n                case \"active\":\n                    if (key === \" \") {\n                        _this.setState({\n                            mention: __assign(__assign({}, _this.state.mention), { status: \"inactive\" })\n                        });\n                        return;\n                    }\n                    var searchText = value.substr(mention.startPosition, _this.getTextArea().selectionStart - mention.startPosition) + key;\n                    // In this case, the mentions box was open but the user typed something else\n                    _this.startLoadingSuggestions(searchText);\n                    if (mention.status !== \"loading\") {\n                        _this.setState({\n                            mention: __assign(__assign({}, _this.state.mention), { status: \"loading\" })\n                        });\n                    }\n                    break;\n                case \"inactive\":\n                    if (suggestionTriggerCharacters.indexOf(event.key) === -1 ||\n                        !/\\s|\\(|\\[|^.{0}$/.test(value.charAt(_this.getTextArea().selectionStart - 1))) {\n                        return;\n                    }\n                    _this.loadEmptySuggestion(event.currentTarget, event.key);\n                    break;\n            }\n        };\n        _this.state = { mention: { status: \"inactive\", suggestions: [] } };\n        return _this;\n    }\n    TextArea.prototype.suggestionsEnabled = function () {\n        return (this.props.suggestionTriggerCharacters &&\n            this.props.suggestionTriggerCharacters.length &&\n            this.props.loadSuggestions);\n    };\n    TextArea.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, classes = _a.classes, readOnly = _a.readOnly, textAreaProps = _a.textAreaProps, height = _a.height, heightUnits = _a.heightUnits, value = _a.value, suggestionTriggerCharacters = _a.suggestionTriggerCharacters, loadSuggestions = _a.loadSuggestions, suggestionsDropdownClasses = _a.suggestionsDropdownClasses, textAreaComponent = _a.textAreaComponent, onPaste = _a.onPaste, onDrop = _a.onDrop;\n        var suggestionsEnabled = suggestionTriggerCharacters &&\n            suggestionTriggerCharacters.length &&\n            loadSuggestions;\n        var mention = this.state.mention;\n        var TextAreaComponent = (textAreaComponent ||\n            \"textarea\");\n        var heightVal = height && heightUnits ? height + heightUnits : height;\n        return (React.createElement(\"div\", { className: \"mde-textarea-wrapper\" },\n            React.createElement(TextAreaComponent, __assign({ className: ClassNames_1.classNames(\"mde-text\", classes), style: { height: heightVal }, ref: this.props.refObject, readOnly: readOnly, value: value, \"data-testid\": \"text-area\" }, textAreaProps, { onChange: function (event) {\n                    var _a;\n                    (_a = textAreaProps === null || textAreaProps === void 0 ? void 0 : textAreaProps.onChange) === null || _a === void 0 ? void 0 : _a.call(textAreaProps, event);\n                    _this.handleOnChange(event);\n                }, onBlur: function (event) {\n                    var _a;\n                    (_a = textAreaProps === null || textAreaProps === void 0 ? void 0 : textAreaProps.onBlur) === null || _a === void 0 ? void 0 : _a.call(textAreaProps, event);\n                    if (suggestionsEnabled) {\n                        _this.handleBlur();\n                    }\n                }, onKeyDown: function (event) {\n                    var _a;\n                    (_a = textAreaProps === null || textAreaProps === void 0 ? void 0 : textAreaProps.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(textAreaProps, event);\n                    _this.handleKeyDown(event);\n                }, onKeyUp: function (event) {\n                    var _a;\n                    (_a = textAreaProps === null || textAreaProps === void 0 ? void 0 : textAreaProps.onKeyUp) === null || _a === void 0 ? void 0 : _a.call(textAreaProps, event);\n                    if (suggestionsEnabled) {\n                        _this.handleKeyUp(event);\n                    }\n                }, onKeyPress: function (event) {\n                    var _a;\n                    (_a = textAreaProps === null || textAreaProps === void 0 ? void 0 : textAreaProps.onKeyPress) === null || _a === void 0 ? void 0 : _a.call(textAreaProps, event);\n                    if (suggestionsEnabled) {\n                        _this.handleKeyPress(event);\n                    }\n                }, onPaste: function (event) {\n                    var _a;\n                    (_a = textAreaProps === null || textAreaProps === void 0 ? void 0 : textAreaProps.onPaste) === null || _a === void 0 ? void 0 : _a.call(textAreaProps, event);\n                    onPaste(event);\n                }, onDragOver: function (event) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                }, onDrop: function (event) {\n                    var _a;\n                    (_a = textAreaProps === null || textAreaProps === void 0 ? void 0 : textAreaProps.onDrop) === null || _a === void 0 ? void 0 : _a.call(textAreaProps, event);\n                    onDrop(event);\n                    event.preventDefault();\n                } })),\n            mention.status === \"active\" && mention.suggestions.length && (React.createElement(SuggestionsDropdown_1.SuggestionsDropdown, { classes: suggestionsDropdownClasses, caret: mention.caret, suggestions: mention.suggestions, onSuggestionSelected: this.handleSuggestionSelected, suggestionsAutoplace: this.props.suggestionsAutoplace, focusIndex: mention.focusIndex, textAreaRef: this.props.refObject }))));\n    };\n    return TextArea;\n}(React.Component));\nexports.TextArea = TextArea;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}