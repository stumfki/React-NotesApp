{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.quoteCommand = void 0;\nvar MarkdownUtil_1 = require(\"../../util/MarkdownUtil\");\nexports.quoteCommand = {\n  buttonProps: {\n    \"aria-label\": \"Insert a quote\"\n  },\n  execute: function (_a) {\n    var initialState = _a.initialState,\n      textApi = _a.textApi;\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    var newSelectionRange = MarkdownUtil_1.selectWord({\n      text: initialState.text,\n      selection: initialState.selection\n    });\n    var state1 = textApi.setSelectionRange(newSelectionRange);\n    var breaksBeforeCount = MarkdownUtil_1.getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);\n    var breaksBefore = Array(breaksBeforeCount + 1).join(\"\\n\");\n    var breaksAfterCount = MarkdownUtil_1.getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);\n    var breaksAfter = Array(breaksAfterCount + 1).join(\"\\n\");\n    // Replaces the current selection with the quote mark up\n    textApi.replaceSelection(breaksBefore + \"> \" + state1.selectedText + breaksAfter);\n    var selectionStart = state1.selection.start + breaksBeforeCount + 2;\n    var selectionEnd = selectionStart + state1.selectedText.length;\n    textApi.setSelectionRange({\n      start: selectionStart,\n      end: selectionEnd\n    });\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","quoteCommand","MarkdownUtil_1","require","buttonProps","execute","_a","initialState","textApi","newSelectionRange","selectWord","text","selection","state1","setSelectionRange","breaksBeforeCount","getBreaksNeededForEmptyLineBefore","start","breaksBefore","Array","join","breaksAfterCount","getBreaksNeededForEmptyLineAfter","end","breaksAfter","replaceSelection","selectedText","selectionStart","selectionEnd","length"],"sources":["C:/Users/Din/Desktop/web/React/notesapp/node_modules/react-mde/lib/js/commands/default-commands/quoteCommand.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.quoteCommand = void 0;\nvar MarkdownUtil_1 = require(\"../../util/MarkdownUtil\");\nexports.quoteCommand = {\n    buttonProps: { \"aria-label\": \"Insert a quote\" },\n    execute: function (_a) {\n        var initialState = _a.initialState, textApi = _a.textApi;\n        // Adjust the selection to encompass the whole word if the caret is inside one\n        var newSelectionRange = MarkdownUtil_1.selectWord({\n            text: initialState.text,\n            selection: initialState.selection\n        });\n        var state1 = textApi.setSelectionRange(newSelectionRange);\n        var breaksBeforeCount = MarkdownUtil_1.getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);\n        var breaksBefore = Array(breaksBeforeCount + 1).join(\"\\n\");\n        var breaksAfterCount = MarkdownUtil_1.getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);\n        var breaksAfter = Array(breaksAfterCount + 1).join(\"\\n\");\n        // Replaces the current selection with the quote mark up\n        textApi.replaceSelection(breaksBefore + \"> \" + state1.selectedText + breaksAfter);\n        var selectionStart = state1.selection.start + breaksBeforeCount + 2;\n        var selectionEnd = selectionStart + state1.selectedText.length;\n        textApi.setSelectionRange({\n            start: selectionStart,\n            end: selectionEnd\n        });\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,IAAIC,cAAc,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AACvDJ,OAAO,CAACE,YAAY,GAAG;EACnBG,WAAW,EAAE;IAAE,YAAY,EAAE;EAAiB,CAAC;EAC/CC,OAAO,EAAE,UAAUC,EAAE,EAAE;IACnB,IAAIC,YAAY,GAAGD,EAAE,CAACC,YAAY;MAAEC,OAAO,GAAGF,EAAE,CAACE,OAAO;IACxD;IACA,IAAIC,iBAAiB,GAAGP,cAAc,CAACQ,UAAU,CAAC;MAC9CC,IAAI,EAAEJ,YAAY,CAACI,IAAI;MACvBC,SAAS,EAAEL,YAAY,CAACK;IAC5B,CAAC,CAAC;IACF,IAAIC,MAAM,GAAGL,OAAO,CAACM,iBAAiB,CAACL,iBAAiB,CAAC;IACzD,IAAIM,iBAAiB,GAAGb,cAAc,CAACc,iCAAiC,CAACH,MAAM,CAACF,IAAI,EAAEE,MAAM,CAACD,SAAS,CAACK,KAAK,CAAC;IAC7G,IAAIC,YAAY,GAAGC,KAAK,CAACJ,iBAAiB,GAAG,CAAC,CAAC,CAACK,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAIC,gBAAgB,GAAGnB,cAAc,CAACoB,gCAAgC,CAACT,MAAM,CAACF,IAAI,EAAEE,MAAM,CAACD,SAAS,CAACW,GAAG,CAAC;IACzG,IAAIC,WAAW,GAAGL,KAAK,CAACE,gBAAgB,GAAG,CAAC,CAAC,CAACD,IAAI,CAAC,IAAI,CAAC;IACxD;IACAZ,OAAO,CAACiB,gBAAgB,CAACP,YAAY,GAAG,IAAI,GAAGL,MAAM,CAACa,YAAY,GAAGF,WAAW,CAAC;IACjF,IAAIG,cAAc,GAAGd,MAAM,CAACD,SAAS,CAACK,KAAK,GAAGF,iBAAiB,GAAG,CAAC;IACnE,IAAIa,YAAY,GAAGD,cAAc,GAAGd,MAAM,CAACa,YAAY,CAACG,MAAM;IAC9DrB,OAAO,CAACM,iBAAiB,CAAC;MACtBG,KAAK,EAAEU,cAAc;MACrBJ,GAAG,EAAEK;IACT,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}